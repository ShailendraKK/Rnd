##########################################
# Header instance definitions            #
##########################################

errors:
    type: enum
    values:
    -   NoError: 1
    -   PacketTooShort: 2
    -   NoMatch: 3
    -   StackOutOfBounds: 4
    -   HeaderTooShort: 5
    -   ParserTimeout: 6

ethernet:
    fields:
    -   dstAddr: 48
    -   srcAddr: 48
    -   etherType: 16
    type: header

ingress::scalars:
    fields:
    -   metadata@action_select1: 14
    -   metadata@action_select2: 14
    -   metadata@action_select3: 14
    -   _padding: 6
    type: metadata

ipv4:
    calculated_fields:
    -   condition: valid(ipv4)
        field: hdrChecksum
        func: calc
        type: update
    fields:
    -   version: 4
    -   ihl: 4
    -   diffserv: 8
    -   totalLen: 16
    -   identification: 16
    -   flags: 3
    -   fragOffset: 13
    -   ttl: 8
    -   protocol: 8
    -   hdrChecksum: 16
    -   srcAddr: 32
    -   dstAddr: 32
    type: header

standard_metadata:
    fields:
    -   ingress_port: 16
    -   packet_length: 14
    -   egress_spec: 16
    -   egress_port: 16
    -   egress_instance: 10
    -   instance_type: 4
    -   clone_spec: 32
    -   parser_error_location: 8
    -   parser_status: 3
    -   checksum_error: 1
    type: metadata

tcp:
    fields:
    -   srcPort: 16
    -   dstPort: 16
    -   seqNo: 32
    -   ackNo: 32
    -   dataOffset: 4
    -   res: 3
    -   ecn: 3
    -   ctrl: 6
    -   window: 16
    -   checksum: 16
    -   urgentPtr: 16
    type: header


##########################################
# Field list definitions                 #
##########################################

field_list_1:
    fields:
    - ipv4.version
    - ipv4.ihl
    - ipv4.diffserv
    - ipv4.totalLen
    - ipv4.identification
    - ipv4.flags
    - ipv4.fragOffset
    - ipv4.ttl
    - ipv4.protocol
    - ipv4.srcAddr
    - ipv4.dstAddr
    type: field_list


##########################################
# Field list calculations                #
##########################################

calc:
    algorithm: csum16
    inputs:
    - field_list_1
    output_width: 16
    type: field_list_calculation


##########################################
# Parse states                           #
##########################################

parse_ipv4:
    implementation: extract(ipv4);
    select_value:
    - ipv4.protocol
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 110
    type: parse_state

parse_tcp:
    implementation: extract(tcp);
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 117
    type: parse_state

start:
    implementation: extract(ethernet);
    select_value:
    - ethernet.etherType
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 98
    type: parse_state


##########################################
# Parser                                 #
##########################################

parser:
    format: dot
    implementation: |-
        digraph {
            start -> parse_ipv4 [value="0x0800", mask="none", order="0"]
            start -> exit [value="default", mask="none", order="1"]
            parse_ipv4 -> parse_tcp [value="0x06", mask="none", order="0"]
            parse_ipv4 -> exit [value="default", mask="none", order="1"]
            parse_tcp -> exit [value="default", mask="none", order="0"]
        }
    start_state: start
    type: parser


##########################################
# Action sets                            #
##########################################

ingress::act:
    implementation: |-
        modify_field(ingress::scalars.metadata@action_select2, 0x0001);
        modify_field(ingress::scalars.metadata@action_select3, 0x0001);
    src_filename: ''
    src_lineno: 1
    type: action

ingress::drop:
    implementation: drop();
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 139
    type: action

ingress::ipv4_forward:
    implementation: |-
        modify_field(standard_metadata.egress_spec, port);
        modify_field(ethernet.srcAddr, ethernet.dstAddr);
        modify_field(ethernet.dstAddr, dstAddr);
    parameter_list:
    -   dstAddr: 48
    -   port: 16
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 143
    type: action

ingress::set_actionselect1:
    implementation: modify_field(ingress::scalars.metadata@action_select1, featurevalue1);
    parameter_list:
    -   featurevalue1: 14
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 149
    type: action

ingress::set_actionselect2:
    implementation: modify_field(ingress::scalars.metadata@action_select2, featurevalue2);
    parameter_list:
    -   featurevalue2: 14
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 154
    type: action

ingress::set_actionselect3:
    implementation: modify_field(ingress::scalars.metadata@action_select3, featurevalue3);
    parameter_list:
    -   featurevalue3: 14
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 159
    type: action


##########################################
# Ingress and Egress tables              #
##########################################

ingress::feature1_exact:
    allowed_actions:
    - ingress::set_actionselect1
    match_on:
        ipv4.protocol: range
    max_entries: 1025
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 164
    type: table

ingress::feature2_exact:
    allowed_actions:
    - ingress::set_actionselect2
    match_on:
        tcp.srcPort: range
    max_entries: 1025
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 175
    type: table

ingress::feature3_exact:
    allowed_actions:
    - ingress::set_actionselect3
    match_on:
        tcp.dstPort: range
    max_entries: 1025
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 186
    type: table

ingress::ipv4_exact:
    allowed_actions:
    - ingress::ipv4_forward
    - ingress::drop
    default_entry:
        action: ingress::drop
        const: false
    match_on:
        ingress::scalars.metadata@action_select1: range
        ingress::scalars.metadata@action_select2: range
        ingress::scalars.metadata@action_select3: range
    max_entries: 1025
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 199
    type: table

ingress::tbl_act:
    allowed_actions:
    - ingress::act
    default_entry:
        action: ingress::act
        const: true
    max_entries: 1025
    src_filename: ''
    src_lineno: 1
    type: table


##########################################
# Ingress conditionals sets              #
##########################################

_condition_0:
    condition: (valid(ipv4))
    format: bracketed_expr
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 215
    type: conditional

_condition_1:
    condition: ((ipv4.protocol) == (6))
    format: bracketed_expr
    src_filename: p4src/decision_tree_BMV2.p4
    src_lineno: 217
    type: conditional


##########################################
# Ingress control flow                   #
##########################################

ingress_flow:
    doc: control flow for ingress
    format: dot
    implementation: |-
        digraph {
            "_condition_0" -> "ingress::ipv4_exact" [condition = false]
            "_condition_0" -> "ingress::feature1_exact" [condition = true]
            "ingress::ipv4_exact" -> "exit_control_flow" [action = always]
            "ingress::feature1_exact" -> "_condition_1" [action = always]
            "_condition_1" -> "ingress::tbl_act" [condition = false]
            "_condition_1" -> "ingress::feature2_exact" [condition = true]
            "ingress::tbl_act" -> "ingress::ipv4_exact" [action = always]
            "ingress::feature2_exact" -> "ingress::feature3_exact" [action = always]
            "ingress::feature3_exact" -> "ingress::ipv4_exact" [action = always]
        }
    start_state: _condition_0
    type: control_flow


##########################################
# Deparsers                              #
##########################################

deparser:
    order:
    - ethernet
    - ipv4
    - tcp
    type: deparser


##########################################
# Processor layout                       #
##########################################

layout:
    format: list
    implementation:
    - parser
    - ingress
    type: processor_layout


##########################################
# Source info                            #
##########################################

source_info:
    date: 2021/05/07 11:42:00
    output_file: p4src/decision_tree_BMV2.yml
    p4_version: '16'
    source_files:
    - ''
    - /opt/netronome/p4/include/16/p4include/core.p4
    - p4src/decision_tree_BMV2.p4
    type: source_info


